<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

	<!-- Start: Do not modify unless you are modifying code behaviour -->
	<!-- The definition of the Root Spring Container shared by all Servlets 
		and Filters -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:root-context.xml</param-value>
	</context-param>
		
	<!-- Creates the Spring Container shared by all Servlets and Filters -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<!-- Processes application requests -->
	
	<servlet>
		<servlet-name>appServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring/appServlet/servlet-context.xml</param-value>
		</init-param>
		<load-on-startup>2</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>appServlet</servlet-name>
		<url-pattern>/Services/*</url-pattern>
	</servlet-mapping>

	<!-- Custom listeners -->
	<listener>
		<description>sessionListener</description>
		<listener-class>AIR.Common.Web.Session.SessionListener</listener-class>
	</listener>
	<listener>
		<description>contextTrackerListener</description>
		<listener-class>TDS.Proctor.Web.ProctorApplication</listener-class>
	</listener>

	<!-- All filters -->
    <!-- This filter creates a proxy for the request object. It needs to precede requestInitializerFilter -->
	<filter>
		<filter-name>requestInitializerFilter</filter-name>
		<filter-class>AIR.Common.Web.Session.HttpRequestLoggerInitializerFilter</filter-class>
		<init-param>
			<param-name>prefix</param-name>
			<param-value>testadmin</param-value>
		</init-param>
        
        <!-- If this parameter is true, (or anything besides "false" or missing), a request proxy is
             generated that permits reading the input data stream multiple times. This parameter is ignored
             unless DEBUG level logging is in effect for HttpRequestLoggerInitializerFilter -->
		<init-param>
			<param-name>LogRequestBodies</param-name>
			<param-value>false</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>requestInitializerFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- This filter needs to follow requestInitializerFilter if used. It should precede all other filters.
         We need this to set Request / Response as a ThreadLocal object. -->
	<filter>
		<filter-name>contextInitializerFilter</filter-name>
		<filter-class>AIR.Common.Web.Session.HttpContextInitializerFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>contextInitializerFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
		
		<!--Start: Added for Program Management and Monitoring and Alerting dependency -->
	<context-param>
	   <param-name>contextInitializerClasses</param-name>
	   <param-value>org.opentestsystem.shared.mna.client.listener.ClientSpringConfigurator,org.opentestsystem.shared.progman.init.InitSpringPropertyConfigLoad</param-value>
	</context-param>
	<!--End: Added for Program Management and Monitoring and Alerting dependency -->
	
	
	    <!-- Start:  Following filter is added for integrating SSO --> 
	  <filter>
	      <filter-name>springSecurityFilterChain</filter-name>
	      <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	  </filter>
	  <filter-mapping>
	      <filter-name>springSecurityFilterChain</filter-name>
	      <url-pattern>/*</url-pattern>
	  </filter-mapping>
	  <!-- End:  Following filter is added for integrating SSO  -->
	

	<!-- Start JSF Configuration -->
	<context-param>
		<description>
            Tell the runtime where we are in the project development
            lifecycle.  Valid values are: 
            Development, UnitTest, SystemTest, or Production.
            The runtime will display helpful hints to correct common mistakes
            when the value is Development.
        </description>
		<param-name>javax.faces.PROJECT_STAGE</param-name>
		<param-value>Development</param-value>
	</context-param>
	<context-param>
		<param-name>javax.faces.DEFAULT_SUFFIX</param-name>
		<param-value>.xhtml</param-value>
	</context-param>
	<context-param>
		<param-name>javax.faces.FACELETS_LIBRARIES</param-name>
		<param-value>/WEB-INF/classes/taglib.xml;</param-value>
	</context-param>
	<context-param>
		<description>State saving method: 'client' or 'server' (=default). See JSF Specification 2.5.2</description>
		<param-name>javax.faces.STATE_SAVING_METHOD</param-name>
		<param-value>client</param-value>
	</context-param>
	<context-param>
		<param-name>javax.servlet.jsp.jstl.fmt.localizationContext</param-name>
		<param-value>resources.application</param-value>
	</context-param>
	<!-- <context-param>
		<param-name>javax.faces.application.CONFIG_FILES </param-name>
		<param-value>/WEB-INF/classes/faces-config.xml</param-value>
	</context-param>-->
	
	<servlet>
		<servlet-name>Faces Servlet</servlet-name>
		<servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>Faces Servlet</servlet-name>
		<url-pattern>*.xhtml</url-pattern>
	</servlet-mapping>
	
	<!--  may only be available with Mojarra -->
	<!--  listener>
		<listener-class>com.sun.faces.config.ConfigureListener</listener-class>
	</listener-->

	<!-- End JSF Configuration -->
	<!-- End: Do not modify unless you are modifying code behaviour -->

	<!-- Start: Application config settings. Modify as necessary. -->
	<!-- These are settings from settings.config. Overwrite any of the ones 
		mentioned in <settings.config> in context.xml -->
	<!-- End: Application config settings. Modify as necessary. -->
	<welcome-file-list>
		<welcome-file>selectUserRoles.xhtml</welcome-file>
	</welcome-file-list>
    <display-name>
      Proctor Application
    </display-name>

</web-app>
